"use strict";
(self.webpackChunk_nl_design_system_website = self.webpackChunk_nl_design_system_website || []).push([
 [7833],
 {
  24184: (e, n, i) => {
   i.r(n), i.d(n, { assets: () => o, contentTitle: () => l, default: () => m, frontMatter: () => s, metadata: () => a, toc: () => d });
   var t = i(11527),
    r = i(80877);
   const s = { title: "Ruimte | Richtlijnen", hide_title: !0, hide_table_of_contents: !1, sidebar_label: "Ruimte", sidebar_position: 3, pagination_label: "Ruimte", description: "Richtlijnen voor ruimte", keywords: ["ruimte", "toegankelijkheid"] },
    l = "Ruimte",
    a = { id: "richtlijnen/stijl/ruimte", title: "Ruimte | Richtlijnen", description: "Richtlijnen voor ruimte", source: "@site/docs/richtlijnen/stijl/ruimte.md", sourceDirName: "richtlijnen/stijl", slug: "/richtlijnen/stijl/ruimte", permalink: "/en/richtlijnen/stijl/ruimte", draft: !1, unlisted: !1, editUrl: "https://github.com/nl-design-system/documentatie/tree/main/docs/richtlijnen/stijl/ruimte.md", tags: [], version: "current", sidebarPosition: 3, frontMatter: { title: "Ruimte | Richtlijnen", hide_title: !0, hide_table_of_contents: !1, sidebar_label: "Ruimte", sidebar_position: 3, pagination_label: "Ruimte", description: "Richtlijnen voor ruimte", keywords: ["ruimte", "toegankelijkheid"] }, sidebar: "richtlijnen", previous: { title: "Kleuren", permalink: "/en/richtlijnen/stijl/kleuren" }, next: { title: "Iconen", permalink: "/en/richtlijnen/stijl/iconen" } },
    o = {},
    d = [
     { value: "Spacing scale", id: "spacing-scale", level: 2 },
     { value: "Maak gebruik van een spacing scale.", id: "maak-gebruik-van-een-spacing-scale", level: 3 },
     { value: "Box model", id: "box-model", level: 2 },
     { value: "Werk en denk vanuit het box model.", id: "werk-en-denk-vanuit-het-box-model", level: 3 },
     { value: "Content", id: "content", level: 4 },
     { value: "Padding", id: "padding", level: 4 },
     { value: "Border", id: "border", level: 4 },
     { value: "Margin", id: "margin", level: 4 },
     { value: "Spacing concepten", id: "spacing-concepten", level: 2 },
     { value: "Maak gebruik van de spacing concepten.", id: "maak-gebruik-van-de-spacing-concepten", level: 3 },
     { value: "Inline", id: "inline", level: 4 },
     { value: "Block", id: "block", level: 4 },
     { value: "Text", id: "text", level: 4 },
     { value: "Column", id: "column", level: 4 },
     { value: "Row", id: "row", level: 4 },
     { value: "Ontwerpen met ruimte", id: "ontwerpen-met-ruimte", level: 2 },
     { value: "Relaties", id: "relaties", level: 3 },
     { value: "Gebruik ruimte om relaties te cre\xebren tussen elementen.", id: "gebruik-ruimte-om-relaties-te-cre\xebren-tussen-elementen", level: 4 },
     { value: "Relaties binnen typografie", id: "relaties-binnen-typografie", level: 4 },
     { value: "Hi\xebrarchie", id: "hi\xebrarchie", level: 3 },
     { value: "Gebruik ruimte om hi\xebrarchie te cre\xebren tussen elementen.", id: "gebruik-ruimte-om-hi\xebrarchie-te-cre\xebren-tussen-elementen", level: 4 },
     { value: "Ruim of Compact", id: "ruim-of-compact", level: 3 },
     { value: "Stem het gebruik van ruimte af op de functie en inhoud van de dienst.", id: "stem-het-gebruik-van-ruimte-af-op-de-functie-en-inhoud-van-de-dienst", level: 4 },
     { value: "Ruimte tussen interactieve elementen", id: "ruimte-tussen-interactieve-elementen", level: 3 },
     { value: "Reserveer ruimte tussen interactieve elementen.", id: "reserveer-ruimte-tussen-interactieve-elementen", level: 4 },
     { value: "Meer informatie", id: "meer-informatie", level: 2 },
     { value: "Gerelateerde WCAG Richtlijnen", id: "gerelateerde-wcag-richtlijnen", level: 3 },
     { value: "Links", id: "links", level: 3 },
     { value: "Over deze richtlijnen", id: "over-deze-richtlijnen", level: 2 },
    ];
   function c(e) {
    const n = { a: "a", em: "em", h1: "h1", h2: "h2", h3: "h3", h4: "h4", hr: "hr", img: "img", li: "li", p: "p", ul: "ul", ...(0, r.a)(), ...e.components };
    return (0, t.jsxs)(t.Fragment, { children: [(0, t.jsx)(n.h1, { id: "ruimte", children: "Ruimte" }), "\n", (0, t.jsx)(n.p, { children: "Ruimte (\u2018Spacing\u2019 in het Engels) helpt bij het organiseren van inhoud. Door ruimte op een voorspelbare manier toe te passen kun je visueel verbanden leggen en orde scheppen. Dit geldt voor componenten maar ook voor de algehele opmaak van een pagina ofwel \u2018layout\u2019." }), "\n", (0, t.jsx)(n.h2, { id: "spacing-scale", children: "Spacing scale" }), "\n", (0, t.jsx)(n.h3, { id: "maak-gebruik-van-een-spacing-scale", children: "Maak gebruik van een spacing scale." }), "\n", (0, t.jsx)(n.p, { children: "Om ruimte consistent toe te passen is het verstandig om te werken met een vaste set aan waardes die oplopen in grootte. Een zogenoemde \u2018spacing scale\u2019. Een spacing scale start met kleine waardes. Hiermee kun je relaties cre\xebren op detailniveau. Vervolgens loopt de spacing scale, vaak met steeds grotere spongen, op naar waardes die ingezet kunnen worden voor een ruimere opzet." }), "\n", (0, t.jsx)(n.p, { children: (0, t.jsx)(n.img, { src: "https://raw.githubusercontent.com/nl-design-system/documentatie/assets/richtlijnen_stijl_ruimte_spacing-scale.png", alt: "13 losse blokjes die steeds breeder worden. Onder elk blok staat een getal" }) }), "\n", (0, t.jsxs)(n.p, { children: ["Ook bij het Voorbeeld thema maken we gebruik van een spacing scale. Sterker nog, we hebben meerdere spacing scales. \xc9\xe9n voor elk ", (0, t.jsx)(n.a, { href: "#spacing-concepten", children: "spacing concept" }), "."] }), "\n", (0, t.jsx)(n.h2, { id: "box-model", children: "Box model" }), "\n", (0, t.jsx)(n.h3, { id: "werk-en-denk-vanuit-het-box-model", children: "Werk en denk vanuit het box model." }), "\n", (0, t.jsxs)(n.p, { children: ["De ", (0, t.jsx)(n.a, { href: "#spacing-concepten", children: "spacing concepten" }), " van het NL Design System zijn gebouwd rond het fundamentele layout-principe van CSS, ook wel bekend als het \u2018box model\u2019."] }), "\n", (0, t.jsx)(n.p, { children: "Alle elementen van een webpagina staan in een box, een rechthoek die het element omsluit." }), "\n", (0, t.jsx)(n.p, { children: (0, t.jsx)(n.img, { src: "https://raw.githubusercontent.com/nl-design-system/documentatie/assets/richtlijnen_stijl_ruimte_box-model.png", alt: "Box model structuur met een grotere box die de margin vertegenwoordigt rond een kleinere box die de content voorstelt met zijn padding en border." }) }), "\n", (0, t.jsx)(n.h4, { id: "content", children: "Content" }), "\n", (0, t.jsx)(n.p, { children: "Inhoud ofwel \u2018Content\u2019 is de ruimte voor tekst, een plaatje of andere elementen." }), "\n", (0, t.jsx)(n.h4, { id: "padding", children: "Padding" }), "\n", (0, t.jsx)(n.p, { children: "Padding is de ruimte tussen de content en de border. Zonder padding zou de border strak om de content zitten. Padding heeft dezelfde achtergrondkleur als de content." }), "\n", (0, t.jsx)(n.h4, { id: "border", children: "Border" }), "\n", (0, t.jsx)(n.p, { children: "De border is de rand om de content." }), "\n", (0, t.jsx)(n.h4, { id: "margin", children: "Margin" }), "\n", (0, t.jsx)(n.p, { children: "Marge ofwel \u2018Margin\u2019 is het deel buiten de border van de box. Margin zorgt voor ruimte tussen aangrenzende boxen. Margin is transparant, heeft geen eigen kleur. Margin draagt niet bij aan de breedte van een element." }), "\n", (0, t.jsx)(n.h2, { id: "spacing-concepten", children: "Spacing concepten" }), "\n", (0, t.jsx)(n.h3, { id: "maak-gebruik-van-de-spacing-concepten", children: "Maak gebruik van de spacing concepten." }), "\n", (0, t.jsx)(n.p, { children: "Binnen het NL Design System is ruimte conceptueel opgezet door vijf herbruikbare spacing scales: Inline, Block, Text, Column en Row. Deze \u2018spacing concepten\u2019 worden met behulp van Design Tokens toegepast op alle componenten en templates." }), "\n", (0, t.jsx)(n.p, { children: "Let wel; gebruik 'Spacing' design tokens enkel voor ruimte binnen en tussen componenten. Gebruik 'Sizing' design tokens voor de grootte van elementen." }), "\n", (0, t.jsx)(n.h4, { id: "inline", children: "Inline" }), "\n", (0, t.jsx)(n.p, { children: "Inline tussenruimte is de ruimte binnen componenten, voor of na tekst." }), "\n", (0, t.jsx)(n.p, { children: "Gebruik de \u2018Inline\u2019 spacing scale om binnen componenten ruimte te creeeren voor of na tekst. In CSS kun je de volgende properties gebruiken:" }), "\n", (0, t.jsxs)(n.ul, { children: ["\n", (0, t.jsx)(n.li, { children: "margin-inline-start" }), "\n", (0, t.jsx)(n.li, { children: "margin-inline-end" }), "\n", (0, t.jsx)(n.li, { children: "padding-inline-start" }), "\n", (0, t.jsx)(n.li, { children: "padding-inline-end" }), "\n"] }), "\n", (0, t.jsx)(n.p, { children: (0, t.jsx)(n.img, { src: "https://raw.githubusercontent.com/nl-design-system/documentatie/assets/richtlijnen_stijl_ruimte_concept-inline.png", alt: "Spacing scale met verticaal 10 blokjes. In elk blokje staat de tekst 'label'. Links en rechts van de tekst staan lichtroze vlakken. De vlakken worden per blokje breeder." }) }), "\n", (0, t.jsx)(n.h4, { id: "block", children: "Block" }), "\n", (0, t.jsx)(n.p, { children: "Block tussenruimte is de ruimte binnen componenten, boven of onder tekst." }), "\n", (0, t.jsx)(n.p, { children: "Gebruik de \u2018Block\u2019 spacing scale om binnen componenten ruimte te creeeren boven of onder tekst. In CSS kun je de volgende properties gebruiken:" }), "\n", (0, t.jsxs)(n.ul, { children: ["\n", (0, t.jsx)(n.li, { children: "margin-block-start" }), "\n", (0, t.jsx)(n.li, { children: "margin-block-end" }), "\n", (0, t.jsx)(n.li, { children: "padding-block-start" }), "\n", (0, t.jsx)(n.li, { children: "padding-block-end" }), "\n"] }), "\n", (0, t.jsx)(n.p, { children: (0, t.jsx)(n.img, { src: "https://raw.githubusercontent.com/nl-design-system/documentatie/assets/richtlijnen_stijl_ruimte_concept-block.png", alt: "Spacing scale met horizontaal 10 blokjes. In elk blokje staat de tekst 'label'. Boven en onder de tekst staan roze vlakken. De vlakken worden per blokje hoger." }) }), "\n", (0, t.jsx)(n.h4, { id: "text", children: "Text" }), "\n", (0, t.jsx)(n.p, { children: "Text tussenruimte is de ruimte binnen componenten, tussen tekst en iconen." }), "\n", (0, t.jsx)(n.p, { children: "Gebruik de \u2018Text\u2019 spacing scale om binnen componenten ruimte te creeeren tussen verschillende teksten of iconen." }), "\n", (0, t.jsx)(n.p, { children: (0, t.jsx)(n.img, { src: "https://raw.githubusercontent.com/nl-design-system/documentatie/assets/richtlijnen_stijl_ruimte_concept-text.png", alt: "Spacing scale met verticaal 10 blokjes. In elk blokje staat een kalender icoon en de tekst 'label'. Tussen het icoon en de tekst staan groene vlakken. De vlakken worden per blokje breeder." }) }), "\n", (0, t.jsx)(n.h4, { id: "column", children: "Column" }), "\n", (0, t.jsx)(n.p, { children: "Column tussenruimte is de horizontale ruimte tussen componenten." }), "\n", (0, t.jsx)(n.p, { children: "Gebruik de \u2018Column\u2019 spacing scale om horizontaal ruimte te creeeren tussen componenten. In CSS kun je de volgende properties gebruiken:" }), "\n", (0, t.jsxs)(n.ul, { children: ["\n", (0, t.jsx)(n.li, { children: "margin-inline-start" }), "\n", (0, t.jsx)(n.li, { children: "margin-inline-end" }), "\n", (0, t.jsx)(n.li, { children: "padding-inline-start" }), "\n", (0, t.jsx)(n.li, { children: "padding-inline-end" }), "\n"] }), "\n", (0, t.jsx)(n.p, { children: (0, t.jsx)(n.img, { src: "https://raw.githubusercontent.com/nl-design-system/documentatie/assets/richtlijnen_stijl_ruimte_concept-column.png", alt: "Spacing scale met verticaal 2 kolommen van 10 blokjes. In elk blokje staat de tekst 'label'. Per twee blokjes is er hotizontaal een lichtblauw vlak De vlakken worden per blokje breeder." }) }), "\n", (0, t.jsx)(n.h4, { id: "row", children: "Row" }), "\n", (0, t.jsx)(n.p, { children: "Row tussenruimte is de verticale ruimte tussen componenten." }), "\n", (0, t.jsx)(n.p, { children: "Gebruik de \u2018Row\u2019 spacing scale om verticaal ruimte te creeeren tussen componenten. In CSS kun je de volgende properties gebruiken:" }), "\n", (0, t.jsxs)(n.ul, { children: ["\n", (0, t.jsx)(n.li, { children: "margin-block-start" }), "\n", (0, t.jsx)(n.li, { children: "margin-block-end" }), "\n", (0, t.jsx)(n.li, { children: "padding-block-start" }), "\n", (0, t.jsx)(n.li, { children: "padding-block-end" }), "\n"] }), "\n", (0, t.jsx)(n.p, { children: (0, t.jsx)(n.img, { src: "https://raw.githubusercontent.com/nl-design-system/documentatie/assets/richtlijnen_stijl_ruimte_concept-row.png", alt: "Spacing scale met horizontaal 2 rijen van 10 blokjes. In elk blokje staat de tekst 'label'. Per twee blokjes is er verticaal een blauw vlak. De vlakken worden per blokje hoger." }) }), "\n", (0, t.jsx)(n.p, { children: "Met deze spacing concepten kun je alle componenten op een consistente manier van ruimte voorzien. Denk bijvoorbeeld aan een \u2018Card\u2019 of de ruimte tussen de elementen in een formulier." }), "\n", (0, t.jsx)(n.p, { children: (0, t.jsx)(n.img, { src: "https://raw.githubusercontent.com/nl-design-system/documentatie/assets/richtlijnen_stijl_ruimte_card.png", alt: "Twee card componenten. Bij het eerste card component zijn door middel van kleurvlakken de ruimtes aangeduid." }) }), "\n", (0, t.jsx)(n.p, { children: (0, t.jsx)(n.img, { src: "https://raw.githubusercontent.com/nl-design-system/documentatie/assets/richtlijnen_stijl_ruimte_form.png", alt: "Twee korte formulieren. Bij het eerste formulier zijn door middel van kleurvlakken de verticale ruimtes aangeduid." }) }), "\n", (0, t.jsx)(n.h2, { id: "ontwerpen-met-ruimte", children: "Ontwerpen met ruimte" }), "\n", (0, t.jsx)(n.h3, { id: "relaties", children: "Relaties" }), "\n", (0, t.jsx)(n.h4, { id: "gebruik-ruimte-om-relaties-te-cre\xebren-tussen-elementen", children: "Gebruik ruimte om relaties te cre\xebren tussen elementen." }), "\n", (0, t.jsx)(n.p, { children: "Gebruik kleine afstanden om elementen samen te groeperen en grotere afstanden om ze te scheiden. Elementen die dicht bij elkaar staan lijken meer met elkaar verbonden te zijn dan dingen die verder uit elkaar staan." }), "\n", (0, t.jsxs)(n.p, { children: ["Dit is een van de ", (0, t.jsx)(n.a, { href: "https://www.smashingmagazine.com/2014/03/design-principles-visual-perception-and-the-principles-of-gestalt/", children: "Gestalt principes" }), " ookwel bekend als ", (0, t.jsx)(n.a, { href: "https://lawsofux.com/law-of-proximity/", children: "Law of proximity" }), "."] }), "\n", (0, t.jsx)(n.p, { children: (0, t.jsx)(n.img, { src: "https://raw.githubusercontent.com/nl-design-system/documentatie/assets/richtlijnen_stijl_ruimte_relaties.png", alt: "36 stippen. Door een ruimte wordt er een groepje van 24 en 12 stippen gemaakt." }) }), "\n", (0, t.jsx)(n.h4, { id: "relaties-binnen-typografie", children: "Relaties binnen typografie" }), "\n", (0, t.jsx)(n.p, { children: "De ruimte tussen een voorgaande sectie en een koptekst moet groter zijn dan de ruimte tussen de koptekst en de eerste alinea na die koptekst." }), "\n", (0, t.jsx)(n.p, { children: (0, t.jsx)(n.img, { src: "https://raw.githubusercontent.com/nl-design-system/documentatie/assets/richtlijnen_stijl_ruimte_relaties-typografie.png", alt: "Screenshot van een artikel. Duidelijk is dat de witruimte boven kopteksten groter is dan onder de kopteksten." }) }), "\n", (0, t.jsxs)(n.p, { children: [(0, t.jsx)(n.a, { href: "https://www.w3.org/WAI/WCAG21/Understanding/visual-presentation.html", children: "WCAG richtlijn 1.4.8 \u2018Visual Presentation\u2019" }), " beschrijft dat de regelafstand van een alinea ten minste 1.5 zou moeten zijn. En dat de afstand tussen alinea\u2019s ten minste 1,5 keer zo groot zou moeten zijn als de regelafstand."] }), "\n", (0, t.jsx)(n.h3, { id: "hi\xebrarchie", children: "Hi\xebrarchie" }), "\n", (0, t.jsx)(n.h4, { id: "gebruik-ruimte-om-hi\xebrarchie-te-cre\xebren-tussen-elementen", children: "Gebruik ruimte om hi\xebrarchie te cre\xebren tussen elementen." }), "\n", (0, t.jsx)(n.p, { children: "Gebruik ruimte om belangrijke elementen extra attentiewaarde mee te geven. Elementen met meer ruimte hebben ogen belangrijker dan elementen die minder ruimte om zich heen hebben." }), "\n", (0, t.jsx)(n.p, { children: (0, t.jsx)(n.img, { src: "https://raw.githubusercontent.com/nl-design-system/documentatie/assets/richtlijnen_stijl_ruimte_hierarchie.png", alt: "Vier stippen in vier vlakken. Er is 1 vlak dat meer witruimte heeft waardoor deze meer opvalt." }) }), "\n", (0, t.jsx)(n.h3, { id: "ruim-of-compact", children: "Ruim of Compact" }), "\n", (0, t.jsx)(n.h4, { id: "stem-het-gebruik-van-ruimte-af-op-de-functie-en-inhoud-van-de-dienst", children: "Stem het gebruik van ruimte af op de functie en inhoud van de dienst." }), "\n", (0, t.jsx)(n.p, { children: "Veel ruimte werkt goed bij het lezen van langere teksten en het cre\xebren van een bepaalde sfeer (branding). Compacte ruimte is geschikt voor het effici\xebnt uitvoeren van taken. Denk bijvoorbeeld aan pagina\u2019s met veel data in tabellen." }), "\n", (0, t.jsx)(n.p, { children: (0, t.jsx)(n.img, { src: "https://raw.githubusercontent.com/nl-design-system/documentatie/assets/richtlijnen_stijl_ruimte_purpose.png", alt: "Twee schematische weergaves van een interface. De eerste is ruim opgezet met een groot vlak en tekst. De tweede is compact met een tabel" }) }), "\n", (0, t.jsx)(n.p, { children: "Informatie die te compact wordt gepresenteerd kan moeilijk te verwerken zijn voor gebruikers. Zorg er daarom voor dat de layout van de pagina voldoende witruimte heeft." }), "\n", (0, t.jsx)(n.h3, { id: "ruimte-tussen-interactieve-elementen", children: "Ruimte tussen interactieve elementen" }), "\n", (0, t.jsx)(n.h4, { id: "reserveer-ruimte-tussen-interactieve-elementen", children: "Reserveer ruimte tussen interactieve elementen." }), "\n", (0, t.jsx)(n.p, { children: "Hoewel WCAG wel een richtlijn heeft voor target size. Wordt er niks vermeld over ruimte tussen interactieve elementen. Toch is het aan te raden om tussen interactieve elementen wat ruimte te reserveren. Op die manier neemt de kans om onbedoeld iets te activeren af." }), "\n", (0, t.jsx)(n.p, { children: "Voor iemand met een bevende hand kan een website lastiger te gebruiken zijn als grote delen van het scherm interactief (button of link) zijn." }), "\n", (0, t.jsx)(n.p, { children: (0, t.jsx)(n.img, { src: "https://raw.githubusercontent.com/nl-design-system/documentatie/assets/richtlijnen_stijl_ruimte_interactieve-elementen.png", alt: "Drie verticaal gestapelde vlakken met daarin het woord 'Interactie element'. Tussen deze vlakken bevindt zich een lege ruimte met de tekst 'witruimte'" }) }), "\n", (0, t.jsx)(n.h2, { id: "meer-informatie", children: "Meer informatie" }), "\n", (0, t.jsx)(n.h3, { id: "gerelateerde-wcag-richtlijnen", children: "Gerelateerde WCAG Richtlijnen" }), "\n", (0, t.jsxs)(n.ul, { children: ["\n", (0, t.jsx)(n.li, { children: (0, t.jsx)(n.a, { href: "https://www.w3.org/WAI/WCAG21/Understanding/visual-presentation.html", children: "1.4.8: Visual presentation" }) }), "\n", (0, t.jsx)(n.li, { children: (0, t.jsx)(n.a, { href: "https://www.w3.org/WAI/WCAG2/supplemental/patterns/o3p10-whitespace/", children: "Use White Spacing - Supplemental Guidance to WCAG 2" }) }), "\n"] }), "\n", (0, t.jsx)(n.h3, { id: "links", children: "Links" }), "\n", (0, t.jsxs)(n.p, { children: [(0, t.jsx)(n.a, { href: "https://www.smashingmagazine.com/2014/03/design-principles-visual-perception-and-the-principles-of-gestalt/", children: "Visual Perception And The Principles Of Gestalt - Steven Bradley" }), (0, t.jsx)("br", {}), "\nArtikel waarin de verschillende gestalt principes worden beschreven."] }), "\n", (0, t.jsxs)(n.p, { children: [(0, t.jsx)(n.a, { href: "https://medium.com/eightshapes-llc/space-in-design-systems-188bcbae0d62", children: "Space in design systems - Nathan Curtis" }), (0, t.jsx)("br", {}), "\nArtikel waarin het toepassen van ruimte binnen een design system wordt beschreven."] }), "\n", (0, t.jsxs)(n.p, { children: [(0, t.jsx)(n.a, { href: "https://axesslab.com/hand-tremors/", children: "Hand tremors and the giant-button-problem - Hampus Sethfors" }), (0, t.jsx)("br", {}), "\nArtikel, en video, waarin duidelijk wordt waarom het van belang is om voldoende witruimte bij grote interactieve elementen toe te voegen."] }), "\n", (0, t.jsx)(n.hr, {}), "\n", (0, t.jsx)(n.h2, { id: "over-deze-richtlijnen", children: "Over deze richtlijnen" }), "\n", (0, t.jsxs)(n.p, { children: ["Deze richtlijnen worden onderhouden door het NL Design System en zijn op dit moment in ", (0, t.jsx)(n.em, { children: "beta" }), "."] }), "\n", (0, t.jsxs)(n.p, { children: ["We willen graag van de community horen of ze werkbaar en nuttig zijn. Heb je vragen, aanvullingen of opmerkingen? ", (0, t.jsx)(n.a, { href: "https://github.com/nl-design-system/documentatie/discussions/473", children: "Deel je mening op GitHub" }), " met je suggesties."] })] });
   }
   function m(e = {}) {
    const { wrapper: n } = { ...(0, r.a)(), ...e.components };
    return n ? (0, t.jsx)(n, { ...e, children: (0, t.jsx)(c, { ...e }) }) : c(e);
   }
  },
  80877: (e, n, i) => {
   i.d(n, { Z: () => a, a: () => l });
   var t = i(50959);
   const r = {},
    s = t.createContext(r);
   function l(e) {
    const n = t.useContext(s);
    return t.useMemo(
     function () {
      return "function" == typeof e ? e(n) : { ...n, ...e };
     },
     [n, e],
    );
   }
   function a(e) {
    let n;
    return (n = e.disableParentContext ? ("function" == typeof e.components ? e.components(r) : e.components || r) : l(e.components)), t.createElement(s.Provider, { value: n }, e.children);
   }
  },
 },
]);
